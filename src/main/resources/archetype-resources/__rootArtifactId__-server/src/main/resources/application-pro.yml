mybatis:
  mapper-locations: mapper/*.xml
spring:
  datasource:
    enable: true
    driverClassName: com.mysql.jdbc.Driver
    url: jdbc:mysql://${IP}:${DB_PORT}/${artifactId}?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: ${USER}
    password: ${PASSWORD}
    type: com.alibaba.druid.pool.DruidDataSource
    initialSize: 5
    minIdle: 5
    maxActive: 20
    maxWait: 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    filters: stat,wall,slf4j
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
  executor:
    thread:
      corePoolSize: 5
      maxPoolSize: 5
      queueCapacity: 10
      name:
        prefix: threadpool
  redis:
    enable: false
    database: 0
    host: 183.131.202.13
    port: 6379
    password: Gepoint
    jedis:
      pool:
        max-active: 8
        max-wait: -1
        max-idle: 8
        min-idle: 0
    timeout: 10000
  redission:
    enable: false
    # 连接空闲超时
    idleConnectionTimeout: 10000
    # 连接超时 毫秒
    connectTimeout: 10000
    # 命令等待超时 毫秒
    timeout: 3000
    # 命令失败重试次数
    retryAttempts: 3
    # 命令重试发送时间间隔
    retryInterval: 1500
    password: Gepoint
    # 单个连接最大订阅数量
    subscriptionsPerConnection: 5
    # 客户端名称
    clientName: ${spring.application.name}
    # 节点地址
    address: "redis://183.131.202.13:6379"
    subscriptionConnectionMinimumIdleSize: 1
    subscriptionConnectionPoolSize: 50
    # 最小空闲连接数
    connectionMinimumIdleSize: 32
    # 连接池大小
    connectionPoolSize: 64
    database: 0
#  cloud:
#    consul:
#      host: 127.0.0.1
#      port: 8500
#      discovery:
#        healthCheckPath: /${spring.application.name}/actuator/health
#        serviceName: ${spring.application.name}
#静态资源设置
#  mvc:
#    static-path-pattern: /**
#  resources:
#    static-locations: file:${constants.filePath}
server:
  port: ${SERVER_PORT}
  servlet:
    context-path: /${spring.application.name}
logging:
  level:
    com.zjdex: DEBUG
  config: classpath:logback-spring.xml
#  path: /data/servers/logs/${spring.application.name}/

